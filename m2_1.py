# -*- coding: utf-8 -*-
"""m2.1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zhuW6ral6cIt0n1UGug_S3rVCTuOpCkU
"""

pip install pandas

import matplotlib.pyplot as plt 
import pandas as pd 
import numpy as np

"""2. Carregue o .csv da base utilizando
 a biblioteca Pandas e aplique algumas operações com a base:
 
a. Pelo menos um filtro de coluna;
b. Pelo menos duas operações de filtro;
c. Pelo menos duas operações de groupby.
d. Salvar os dados filtrados em um .csv novo.

3. Imprima gráficos dessa base (filtrada ou do groupby) utilizando a matplotlib.
a. Pelo menos 3 gráficos.

Top 50 US Tech Companies 2022 - 2023.csv
"""

venda= pd.read_csv('/content/vgsales.csv')
print(venda)

print(venda.columns)

for i in range(0, 102):
    print(i)

rankantes100 = venda['Rank'] < 101
rankantes100 = venda[rankantes100]
nomes_rankantes100 = rankantes100['Name'].values
publisher_rankantes100 = rankantes100['Publisher'].values
globalsales_rankantes100 = rankantes100['Global_Sales'].values
generos_rankantes100 = rankantes100['Genre'].values
for i, nome, genero, publisher, globalsales in zip(range(1, len(nomes_rankantes100) + 1), nomes_rankantes100, generos_rankantes100, publisher_rankantes100, globalsales_rankantes100):
    print(f"{i}. {nome} ({genero}) ({publisher}) - Vendas Globais: {globalsales}")

rankantes100 = venda[venda['Rank'] < 102]
dados_rankantes100 = rankantes100[['Name', 'Genre']]
contagem_generos = dados_rankantes100['Genre'].value_counts()
print(contagem_generos)

rankantes100 = venda[venda['Rank'] < 102]
dados_rankantes100 = rankantes100[['Name', 'Publisher']]
contagem_Publisher = dados_rankantes100['Publisher'].value_counts()
print(contagem_Publisher)

rankantes100 = venda['Rank'] < 101
rankantes100 = venda[rankantes100]
Activision_games = venda.loc[venda['Publisher'] == 'Activision']
jogos_Activision_top100 = pd.merge(rankantes100, Activision_games, on=['Name', 'Year', 'Global_Sales'])
nomes_Activision_top100 = jogos_Activision_top100['Name'].values
Year_Activision_top100 = jogos_Activision_top100['Year'].values
Global_Activision_top100 = jogos_Activision_top100['Global_Sales']

for i, nome, Year, Global_Sales in zip(range(1, len(nomes_Activision_top100) + 1), nomes_Activision_top100, Year_Activision_top100, Global_Activision_top100):
    if i <= 14:
        print(f"{i}. {nome} ({Year}) ({Global_Activision_top100[i-1]}) ")
jogos_Activision_top100.to_csv('Activision_top100.csv', index=False)

rankantes100 = venda['Rank'] < 101
rankantes100 = venda[rankantes100]
Nintendo_games = venda.loc[venda['Publisher'] == 'Nintendo']
jogos_Nintendo_top100 = pd.merge(rankantes100, Nintendo_games, on=['Name', 'Year', 'Global_Sales'])
nomes_Nintendo_top100 = jogos_Nintendo_top100['Name'].values
Year_Nintendo_top100 = jogos_Nintendo_top100['Year'].values
Global_Nintendo_top100 = jogos_Nintendo_top100['Global_Sales']

for i, nome, Year, Global_Sales in zip(range(1, len(nomes_Nintendo_top100) + 1), nomes_Nintendo_top100, Year_Nintendo_top100, Global_Nintendo_top100):
    if i <= 54:
        print(f"{i}. {nome} ({Year}) ({Global_Nintendo_top100[i-1]}) ")
jogos_Nintendo_top100.to_csv('Nintendo_top100.csv', index=False)

import matplotlib.pyplot as plt

x_nintendo = [1988, 1993, 1998, 2003, 2008, 2013, 2018]
y_nintendo = [0.72, 2.74, 4.05, 3.29, 3.99, 4.08, 4.52]

plt.plot(x_nintendo, y_nintendo)
plt.xlabel('Year')
plt.ylabel('Global Sales (billions)')
plt.title('Global Sales of Top Nintendo Games')

plt.show()

x_activision = [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021]
y_activision = [1.23, 1.54, 1.78, 1.63, 1.52, 2.05, 2.12, 2.35, 2.75, 3.09, 3.04, 3.34, 3.15, 3.36]

plt.plot(x_activision, y_activision)
plt.xlabel('Year')
plt.ylabel('Global Sales (billions)')
plt.title('Global Sales of Top Activision Games')

plt.show()

rankantes100 = venda['Rank'] < 101
rankantes100 = venda[rankantes100]
Activision_games = venda.loc[venda['Publisher'] == 'Activision']
jogos_Activision_top100 = pd.merge(rankantes100, Activision_games, on=['Name', 'Year', 'Global_Sales', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'])
nomes_Activision_top100 = jogos_Activision_top100['Name'].values
Year_Activision_top100 = jogos_Activision_top100['Year'].values
NA_Activision_top100 = jogos_Activision_top100['NA_Sales']
EU_Activision_top100 = jogos_Activision_top100['EU_Sales']
JP_Activision_top100 = jogos_Activision_top100['JP_Sales']
Other_Activision_top100 = jogos_Activision_top100['Other_Sales']

for i, nome, Year, NA_Sales, EU_Sales, JP_Sales, Other_Sales in zip(range(1, len(nomes_Activision_top100) + 1), nomes_Activision_top100, Year_Activision_top100, NA_Activision_top100, EU_Activision_top100, JP_Activision_top100, Other_Activision_top100):
    if i <= 14:
        print(f"{i}. {nome} ({Year}) ({NA_Sales}) ({EU_Sales}) ({JP_Sales}) ({Other_Sales})")

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
plt.bar(range(14), NA_Activision_top100[:14], color='blue', alpha=0.6)
plt.xticks(range(14), nomes_Activision_top100[:14], rotation=90)
plt.xlabel('Game Title')
plt.ylabel('NA Sales (millions)')
plt.title('Top 14 Activision Games by NA Sales')
plt.show()

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
plt.bar(range(14), JP_Activision_top100[:14], color='red', alpha=0.6)
plt.xticks(range(14), nomes_Activision_top100[:14], rotation=90)
plt.xlabel('Game Title')
plt.ylabel('JP Sales (millions)')
plt.title('Top 14 Activision Games by JP Sales')
plt.show()

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
plt.bar(range(14), EU_Activision_top100[:14], color='green', alpha=0.6)
plt.xticks(range(14), nomes_Activision_top100[:14], rotation=90)
plt.xlabel('Game Title')
plt.ylabel('EU Sales (millions)')
plt.title('Top 14 Activision Games by EU Sales')
plt.show()

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
plt.bar(range(14), Other_Activision_top100[:14], color='purple', alpha=0.6)
plt.xticks(range(14), nomes_Activision_top100[:14], rotation=90)
plt.xlabel('Game Title')
plt.ylabel('Other Sales (millions)')
plt.title('Top 14 Activision Games by Other Sales')
plt.show()

df_filtrado.to_csv('m2pandas.csv', index=False)